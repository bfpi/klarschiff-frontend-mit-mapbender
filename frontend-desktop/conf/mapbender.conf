<?php
# $Id: mapbender.conf-dist 4791 2009-10-19 15:24:13Z christoph $
# http://www.mapbender.org/index.php/Mapbender.conf
# Copyright (C) 2002 CCGIS

# --------------------------------------------
# Klarschiff-specific information (switch for mobile/desktop versions)
# --------------------------------------------

define('KS_PC_STARTSEITE', 'pc/startseite.php');
define('KS_PC_APP_BASE', 'http://demo.klarschiff-hro.de/');
define('KS_PC_APP', 'Klarschiff');
define('KS_MOBIL_APP', 'http://demo.klarschiff-hro.de/mobil/');
define('LP_MARKER_OFFSET', 0);
define("KS_DBSERVER", "localhost");
define("KS_PORT", "5432");
define("KS_DB", "klarschiff_frontend");
define("KS_OWNER", "klarschiff_frontend");
define("KS_PW", "klarschiff_frontend");

# --------------------------------------------
# type of mapbender database
# --------------------------------------------

define("SYS_DBTYPE", "pgsql");

# --------------------------------------------
# database information
# --------------------------------------------

if(SYS_DBTYPE=="mysql")
{
	define("DBSERVER", "<HOST>");
	define("PORT", "3306");
	define("DB", "<database>");
	define("OWNER", "<owner>");
	define("PW", "<password>");
	
	# --------------------------------------------
	# database with geos functions
	# --------------------------------------------

	define("GEOS_DBSERVER", "<HOST>");
	define("GEOS_PORT", "5432");
	define("GEOS_DB", "<database with geos functions>");
	define("GEOS_OWNER", "<owner>");
	define("GEOS_PW", "<password>");

	$GEOS_DBSERVER=GEOS_DBSERVER;
	$GEOS_DB=GEOS_DB;
	$GEOS_PORT =GEOS_PORT;
	$GEOS_OWNER=GEOS_OWNER;
	$GEOS_PW=GEOS_PW;	
}
else {
	define("DBSERVER", "localhost");
	define("PORT", "5432");
	define("DB", "mapbender");
	define("OWNER", "mapbender");
	define("PW", "mapbender");
}

# --------------------------------------------
# prepared statements (PHP > 5.1.x, PostgreSQL > 7.4)
# --------------------------------------------

define("PREPAREDSTATEMENTS",true);

# --------------------------------------------
# encoding - default characterset UTF-8 / ISO-8859-1
# --------------------------------------------

define("CHARSET","UTF-8");

# --------------------------------------------
# error_reporting
# --------------------------------------------

ini_set('error_reporting', 'E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR');

# --------------------------------------------
# directory for temporary files
# --------------------------------------------

define("TMPDIR", "../tmp");

# --------------------------------------------
# directory for log files
# --------------------------------------------

define("LOG_DIR", dirname(__FILE__) . "/../log/");

# --------------------------------------------
# URL to login
# --------------------------------------------

define("LOGIN", "http://demo.klarschiff-hro.de/frames/login.php");
define("MAXLOGIN", 3);
$login = LOGIN;

# --------------------------------------------
# URL to owsproxy
# (no terminating slash)
# --------------------------------------------

define("OWSPROXY", "http://demo.klarschiff-hro.de/owsproxy");

# --------------------------------------------
# Definitions for HTTP Authentication
# --------------------------------------------

define('REALM', 'mapbender_registry');
define('NONCEKEY', 'mapbender');
$nonceLife = 300; 
define('HTTP_AUTH_PROXY',"https://".$_SERVER['HTTP_HOST']."/http_auth"); //Problem - behind a rewrite rule - define it hardcoded?

# --------------------------------------------
# type of server-connection
# curl, socket, http
# --------------------------------------------

define("CONNECTION", "curl");
define("CONNECTION_PROXY", ""); // ip
define("CONNECTION_PORT", ""); // port
define("CONNECTION_USER", ""); // user
define("CONNECTION_PASSWORD", ""); // password
define("CONNECTION_USERAGENT", "Mapbender");

# --------------------------------------------
# HOSTs not for Proxy (curl)
# --------------------------------------------

define("NOT_PROXY_HOSTS", "127.0.0.1, localhost");

# --------------------------------------------
# security: path to modules
# --------------------------------------------

define("CHECK", false);

# --------------------------------------------
# enable/disable portal
# --------------------------------------------

define("PORTAL", false);

# --------------------------------------------
# enable/disable ows metadata overwrite
# If set to false, the edited metadata of the ows will not
# automatically exchanged with the metadata from the server,
# when updating the service. It has to be done with help of
# the metadata editor afterwards
# 
# --------------------------------------------

define("MD_OVERWRITE", true);

# --------------------------------------------
# mail settings for internal mapbender mails 
# smtp mailing
# for further settings check 'class_administration.php'
# please check phpmailer for more information
# --------------------------------------------

define("USE_PHP_MAILING", "false");
define("MAILHOST", "<host>");
define("MAILUSERNAME", "<user>");
define("MAILPASSWORD", "<password>");
define("MAILADMIN", "<mailaddress of the mailadmin>");
define("MAILADMINNAME", "<mailadminname>");

$mailHost = MAILHOST;
$mailUsername =  MAILUSERNAME;
$mailPassword =  MAILPASSWORD;
 
# --------------------------------------------
# wms monitoring
# --------------------------------------------

define("AUTO_UPDATE", "0");
define("TIME_LIMIT", "300");
define("PHP_PATH", "/usr/bin/");

# --------------------------------------------
# Mapbender error logging
# --------------------------------------------

define("LOG_LEVEL", "error"); //"off","error","warning","notice" or "all"
define("LOG_JS", "alert"); // "on", "alert", "console" or "off"


# --------------------------------------------
# Internationalization
# --------------------------------------------

define("USE_I18N", true);  // requires gettext for PHP. 
							// If "false", LANGUAGE is set to english
define("LANGUAGE", "de");   // only available if USE_I18N is "true". 
							// "en", "de", "bg", "gr", "nl", "hu", "it", "es","fr","pt"

# --------------------------------------------
# RSS
# Mapbender > 2.7 generates a GeoRSS file which shows the changes in the mapbender service database. The 
# GeoRSS file get entries when wms are uploaded, updated or deleted. The RSS file can be used to show the positions
# of new layers and services on in the own mapframe or in other applications.  
# --------------------------------------------

define("GEO_RSS_FILE", "../tmp/georss.xml");

#---------------------------------------------
# PREVIEW
# This path is defined to allow a saving of preview pictures for the content of wms/layers and 
# wmc docs. The preview can generated with the wms and wmc metadata editor guis and the previews are used 
# by the metadata module and are distributed with the iso19139 files which can be generated by mapbender.
#---------------------------------------------

define("PREVIEW_DIR", "../geoportal/preview");

#---------------------------------------------
# METADATA
# This path is defined to allow a saving of iso19139 xml files which are generated by mapbender and metador
# The folder should be owned by the webserver user to allow writing of files which are generated from a php 
# script. The content of the folder may be harvested 
#---------------------------------------------

define("METADATA_DIR", "../../metadata");


# --------------------------------------------
# UPLOAD
# --------------------------------------------

define("UPLOAD_DIR", "../tmp");
define("UPLOAD_WHITELIST_FILE_TYPES", "");
define("UPLOAD_BLACKLIST_FILE_TYPES", "");
define("UPLOAD_MAX_SIZE_KB", 8192);

# --------------------------------------------
# use jQuery from Google CDN
# --------------------------------------------

define("LOAD_JQUERY_FROM_GOOGLE", false);

#--------------------------------------------
# define a public user by mb_user_id
# This user is a typical anonymous user which don't need to authenticate itself.
# Some functions of the portal framework not allowed for this user.
# --------------------------------------------

define("PUBLIC_USER", "7");

# --------------------------------------------
# Define a session name (useful for installations when more than one mapbender is installed on one server.
# These installations won't share the session but will share probably one database. When the user switch from one
# to another installation - and there are different session names - the configuration from the session will be forgotten. There is a new environment.)
# --------------------------------------------

#define("SESSION_NAME", "MAPBENDER");


#---------------------------------------------
# HOSTNAME WHITELIST
# The whitelist is used for some modules who generate urls from a given hostName GET parameter. In such a case it is usefull to give a whitelist for security reasons! If no hostName is given, the parameter $_SERVER['HTTP_HOST'] is used for the urls!
#---------------------------------------------

define("HOSTNAME_WHITELIST", "");

# --------------------------------------------
# Calculate bboxes for all supported SRS (Postgis needed)
# This module will compute bboxes for all srs which will be found in the service capabilities and which are defined
# in the array below. Normaly mapbender only uses bbox's which are given thru the service caps. In many use cases it is
# needfull to have more than one bbox given (e.g. metadata). The array is defined to supress the calculation of to many 
# srs like e.g. geoserver offers. The array should include all the srs which are used in the mapbender installation and 
# which are usefull for the special community for which the installation was done (local-sdi, INSPIRE, ...) 
# --------------------------------------------

define("SRS_ARRAY", "25833,2398,4326,900913");


# --------------------------------------------
# define a wrapper for index.php/login.php to use e.g. the get api when integrated in external applications like cms
# --------------------------------------------

#define("WRAPPER_PATH","/portal/karten.html");
#define("WRAPPER_PATH","");

###HACK for GLOBALS
$DBSERVER=DBSERVER;
  $DB=DB;
  $OWNER=OWNER;
  $PW=PW;
  

?>
